{
  "version": 3,
  "file": "ngx-filepond.js",
  "sources": [
    "ng://ngx-filepond/out/filepond.module.ts",
    "ng://ngx-filepond/out/filepond.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FilePondComponent } from './filepond.component';\n\nexport { registerPlugin } from 'filepond';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [FilePondComponent],\n  exports: [\n    FilePondComponent\n  ]\n})\nexport class FilePondModule { }",
    "import { \n  Component,\n  ElementRef,\n  SimpleChanges,\n  ViewEncapsulation,\n  EventEmitter,\n  NgZone,\n  Output, \n  Input\n} from '@angular/core';\n\nimport {\n  create,\n  supported\n} from 'filepond';\n\n// We test if filepond is supported on the current client\nconst isSupported: Boolean = supported();\n\n// List of attributes for fallback input\nconst inputAttributes: Array<string> = [\n  'id', \n  'name',\n  'class', \n  'multiple', \n  'required', \n  'disabled',\n  'capture',\n  'accept'\n];\n\n// Methods not made available on the component\nconst filteredComponentMethods: Array<string> = [\n  'setOptions',\n  'on',\n  'off',\n  'onOnce',\n  'appendTo',\n  'insertAfter',\n  'insertBefore',\n  'isAttachedTo',\n  'replaceElement',\n  'restoreElement',\n  'destroy'\n];\n\nconst outputs: Array<string> = [\n  'oninit', \n  'onwarning', \n  'onerror', \n  'onactivatefile',\n  'onaddfilestart', \n  'onaddfileprogress', \n  'onaddfile', \n  'onprocessfilestart', \n  'onprocessfileprogress', \n  'onprocessfileabort', \n  'onprocessfilerevert', \n  'onprocessfile',\n  'onprocessfiles',\n  'onremovefile',\n  'onpreparefile',\n  'onupdatefiles'\n];\n\n// Component outline\n@Component({\n  selector: 'file-pond',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"filepond--wrapper\">\n  <input type=\"file\"/>\n</div>`,\n  styles: [``],\n  outputs\n})\n\nexport class FilePondComponent {\n\n  @Input()\n  options: Object = {};\n\n  @Input()\n  files: Array<any>;\n\n  private root: ElementRef;\n  private zone: NgZone;\n  private pond: any;\n  private handleEvent: Function = null;\n\n  constructor(root: ElementRef, zone: NgZone) {\n    this.root = root;\n    this.zone = zone;\n\n    outputs.forEach(output => {\n      this[output] = new EventEmitter<any>();\n    });\n  }\n\n  ngAfterViewInit() {\n\n    const input = this.root.nativeElement.querySelector('input');\n\n    // transfer relevant attributes to input, this so we still have an input with the correct attributes should file pond not load\n    const attributes = this.root.nativeElement.attributes;\n    inputAttributes.forEach(name => {\n      const value = attributes[name] ? attributes[name].value : this.options[name];\n      if (!value) {\n        return;\n      }\n      input.setAttribute(name, value);\n    });\n\n    // no sufficient features supported in this browser\n    if (!isSupported) {\n      return;\n    }\n\n    // map FilePond events to Angular $emitters\n    this.handleEvent = (e) => {\n      this[`on${e.type.split(':')[1]}`].emit({...e.detail});\n    };\n    outputs.forEach(event => {\n      this.root.nativeElement.addEventListener(`FilePond:${ event.substr(2) }`, this.handleEvent);\n    });\n  \n    // will block angular from listening to events inside the pond\n    this.zone.runOutsideAngular(() => {\n      \n      // create instance\n      this.pond = create(input, {\n          // our options\n          ...this.options, \n\n          // our initial files\n          files: this.files\n        }\n      );\n\n    });\n\n    // Copy instance method references to component instance\n    Object.keys(this.pond)\n      \n      // remove unwanted methods\n      .filter(key => filteredComponentMethods.indexOf(key) === -1)\n      \n      // set method references from the component instance to the pond instance\n      .forEach(key => {\n        this[key] = this.pond[key];\n      });\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    // no need to handle first change\n    if (changes.firstChange) {\n      return;\n    };\n\n    // no filepond instance available\n    if (!this.pond) {\n      return;\n    }\n\n    // use new options object as base ( or if not available, use current options )\n    const options = changes.options ? changes.options.currentValue : this.options;\n\n    // see if file list has changed\n    if (changes.files && JSON.stringify(changes.files.previousValue) !== JSON.stringify(changes.files.currentValue)) {\n     \n      // file list has changed\n      options.files = changes.files.currentValue;\n    }\n    \n    // set new options\n    this.pond.setOptions(options);\n  }\n\n  ngOnDestroy() {\n    if (!this.pond) {\n        return;\n    }\n\n    outputs.forEach(event => {\n      this.root.nativeElement.removeEventListener(`FilePond:${ event.substr(2) }`, this.handleEvent);\n    });\n\n    this.pond.destroy();\n  }\n\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
