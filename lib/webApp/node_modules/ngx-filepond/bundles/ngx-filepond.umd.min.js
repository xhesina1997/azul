!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("filepond"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-filepond",["exports","@angular/core","filepond","@angular/common"],t):t(e["ngx-filepond"]={},e.ng.core,e.filepond,e.ng.common)}(this,function(e,o,t,n){"use strict";var r=t.supported(),s=["id","name","class","multiple","required","disabled","capture","accept"],a=["setOptions","on","off","onOnce","appendTo","insertAfter","insertBefore","isAttachedTo","replaceElement","restoreElement","destroy"],p=["oninit","onwarning","onerror","onactivatefile","onaddfilestart","onaddfileprogress","onaddfile","onprocessfilestart","onprocessfileprogress","onprocessfileabort","onprocessfilerevert","onprocessfile","onprocessfiles","onremovefile","onpreparefile","onupdatefiles"],i=function(){function e(e,t){var n=this;this.options={},this.handleEvent=null,this.root=e,this.zone=t,p.forEach(function(e){n[e]=new o.EventEmitter})}return e.prototype.ngAfterViewInit=function(){var n=this,o=this.root.nativeElement.querySelector("input"),i=this.root.nativeElement.attributes;s.forEach(function(e){var t=i[e]?i[e].value:n.options[e];t&&o.setAttribute(e,t)}),r&&(this.handleEvent=function(e){n["on"+e.type.split(":")[1]].emit(Object.assign({},e.detail))},p.forEach(function(e){n.root.nativeElement.addEventListener("FilePond:"+e.substr(2),n.handleEvent)}),this.zone.runOutsideAngular(function(){n.pond=t.create(o,Object.assign({},n.options,{files:n.files}))}),Object.keys(this.pond).filter(function(e){return-1===a.indexOf(e)}).forEach(function(e){n[e]=n.pond[e]}))},e.prototype.ngOnChanges=function(e){if(!e.firstChange&&this.pond){var t=e.options?e.options.currentValue:this.options;e.files&&JSON.stringify(e.files.previousValue)!==JSON.stringify(e.files.currentValue)&&(t.files=e.files.currentValue),this.pond.setOptions(t)}},e.prototype.ngOnDestroy=function(){var t=this;this.pond&&(p.forEach(function(e){t.root.nativeElement.removeEventListener("FilePond:"+e.substr(2),t.handleEvent)}),this.pond.destroy())},e}();i.decorators=[{type:o.Component,args:[{selector:"file-pond",encapsulation:o.ViewEncapsulation.None,template:'<div class="filepond--wrapper">\n  <input type="file"/>\n</div>',styles:[""],outputs:p}]}],i.ctorParameters=function(){return[{type:o.ElementRef},{type:o.NgZone}]},i.propDecorators={options:[{type:o.Input}],files:[{type:o.Input}]};var l=function(){};l.decorators=[{type:o.NgModule,args:[{imports:[n.CommonModule],declarations:[i],exports:[i]}]}],e.registerPlugin=t.registerPlugin,e.FilePondModule=l,e.Éµa=i,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-filepond.umd.min.js.map
